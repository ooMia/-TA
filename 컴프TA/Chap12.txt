#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
#include <ctype.h>	// toupper
#include <stdlib.h> // atoi

#define MAX_LENGTH (256)

void Q1(){
	char input; printf("문자를 입력하시오: ");
	// 문자 입력받기
	scanf_s(" %c", &input, 1);	// 방법 1
	//input = getchar();		// 방법 2
	//input = getc(stdin);		// 방법 3
	printf("아스키 코드값=%d\n", input);
	puts("");
}
char* removeBlanks(char* str) {
	int readI = 0, writeI = 0; char ch;
	while ((ch = str[readI++]) != '\0')
		if (ch != ' ') str[writeI++] = ch;
	str[writeI] = '\0';
	return str;
}
void Q2(){
	printf("공백 문자가 있는 문자열을 입력하시오: ");
	char str[MAX_LENGTH] = { 0, };
	
	// 문자열 입력받기
	//scanf_s(" %[^\n]s", &str, MAX_LENGTH);	// 방법 1
	//gets_s(str, MAX_LENGTH);					// 방법 2
	{											// 방법 3
		int i = 0; char ch;
		while( (i < MAX_LENGTH) && ((ch = getchar()) != EOF) && (ch != '\n') ) str[i++] = ch;
		str[i] = '\0';
	}
	printf("%s\n", removeBlanks(str));
	puts("");
}
int str_chr(char* s, int c) {
	int readI = 0, count = 0; char ch;
	while ((ch = s[readI++]) != '\0') if (ch == c) count++;
	return count;
}
void Q3(){
	char str[MAX_LENGTH], ch;
	printf("문자열을 입력하시오: ");			scanf_s(" %[^\n]s", &str, MAX_LENGTH);
	printf("개수를 셀 문자를 입력하시오: ");	scanf_s(" %c", &ch, 1);

	printf("%c의 개수: %d\n", ch, str_chr(str, ch));
	puts("");
}
void Q4(){
	char str[MAX_LENGTH];
	printf("문자열을 입력하시오: ");			scanf_s(" %[^\n]s", &str, MAX_LENGTH);

	for (char ch = 'a'; ch <= 'z'; ch++)
		printf("%c: %d\n", ch, str_chr(str, ch) + str_chr(str, ch - 'a' + 'A'));
	puts("");
}

void Q5(){
	char input;
	while (1) {
		printf("문자를 입력하시오: ");
		input = getchar(); while (getchar() != '\n');
		
		if (input == '.') break;
		else if ('a' <= input && input <= 'z') input = input - 'a' + 'A';
		printf("%c\n", input);
	}
}
char* str_upper(char* s) {
	int i = 0; char ch;
	while ((ch = s[i++]) != '\0')
		if ('a' <= ch && ch <= 'z') s[i - 1] = ch - 'a' + 'A';
	return s;
}
void Q6(){
	char str[MAX_LENGTH];
	printf("문자열을 입력하시오: "); scanf_s(" %[^\n]s", &str, MAX_LENGTH);

	printf("%s\n", str_upper(str));
	puts("");
}

char* str_lower(char* s) {
	int i = 0; char ch;
	while ((ch = s[i++]) != '\0')
		if ('A' <= ch && ch <= 'Z') s[i - 1] = ch - 'A' + 'a';
	return s;
}
int get_response(char* prompt) {
	prompt = str_lower(prompt);
	if (strcmp(prompt, "yes") == 0
		|| strcmp(prompt, "ok") == 0) return 1;
	else if (strcmp(prompt, "no") == 0) return 0;
	else return 0;
}
void Q7(){
	char str[MAX_LENGTH];
	printf("게임을 하시겠습니까"); scanf_s(" %[^\n]s", &str, MAX_LENGTH);

	printf("%s적인 답변\n", get_response(str) ? "긍정" : "부정");
	puts("");
}
void Q8(){
	char str[MAX_LENGTH];
	printf("문자열을 입력하시오: "); gets_s(str, sizeof(str));

	int nWords = 0;
	char* res = strtok(str, " ");
	while (res != NULL)
		res = strtok(NULL, " "), nWords++;
	printf("단어의 수는 %d입니다.\n", nWords);
	puts("");
}
char* checkGrammar(char* str) {
	str[0] = toupper(str[0]);
	str[strlen(str) - 1] = '.';
	return str;
}
void Q9(){
	char str[MAX_LENGTH];
	printf("텍스트를 입력하시오: "); scanf_s(" %[^\n]s", &str, MAX_LENGTH);

	printf("수정된 텍스트:%s\n", checkGrammar(str));
	puts("");
}
int isPalindrome(char* str) {
	str_lower(str);
	int iHead = 0, iTail = (int)strlen(str) - 1;
	while (iHead < iTail && str[iHead++] == str[iTail--]);
	return (iHead >= iTail);
}
void Q10(){
	char str[MAX_LENGTH];
	printf("문자열을 입력하시오: "); scanf_s(" %[^\n]s", &str, MAX_LENGTH);

	printf("회문%s\n", isPalindrome(str) ? "입니다." : "이 아닙니다.");
	puts("");
}
void printReverse(char* str) {
	char* res[MAX_LENGTH] = { 0, };
	int i = 0;
	res[i++] = strtok(str, " ");
	while ( (res[i++] = strtok(NULL, " ")) != NULL );
	while (i > 0) if (res[--i] != NULL) printf("%s ", res[i]);
}
void Q11(){
	char str[MAX_LENGTH];
	printf("문자열을 입력하시오: "); scanf_s(" %[^\n]s", &str, MAX_LENGTH);

	printReverse(str);
	puts("");
}
void Q12(){
	char str[MAX_LENGTH];
	printf("성과 이름을 대문자로 입력하시오: "); scanf_s(" %[^\n]s", &str, MAX_LENGTH);

	str_lower(str);
	printReverse(str);
	puts("");
}
int countPunctuation(char* str) {
	int i = 0, count = 0;
	while (str[i++] != '\0')
		switch (str[i]) { case '.':case ',':count++; }
	return count;
}
void Q13(){
	char str[MAX_LENGTH];
	printf("문자열을 입력하시오: "); scanf_s(" %[^\n]s", &str, MAX_LENGTH);

	printf("구두점의 개수는 %d입니다.\n", countPunctuation(str));
	puts("");
}
char* str_replace(char* res, char* str, char* from, char* to) {
	int iRes = 0, iStr = 0, iFrom = 0, iTo = 0,
		lenStr = (int)strlen(str), lenFrom = (int)strlen(from), lenTo = (int)strlen(to);

	while (str[iStr] != '\0') {
		res[iRes] = str[iStr];
		if (strncmp(str + iStr, from, lenFrom) == 0) {
			for (int i = 0; i < lenTo; i++)
				if (iRes + i < 80) res[iRes + i] = to[i];
			iStr += lenFrom - 1, iRes += lenTo - 1;
		}
		iStr++, iRes++;
	}
	res[iRes] = '\0';
	return res;
}
void Q14(){
	char res[80], str[80], from[80], to[80];
	printf("문자열을 입력하시오: "); scanf_s(" %[^\n]s", &str, 80);
	printf("찾을 문자열: "); scanf_s(" %[^\n]s", &from, 80);
	printf("바꿀 문자열: "); scanf_s(" %[^\n]s", &to, 80);

	printf("수정된 문자열: %s\n", str_replace(res, str, from, to));
	puts("");
}
int calc(char* str) {
	char* op = strtok(str, " ");
	int a = atoi(strtok(NULL, " "));
	int b = atoi(strtok(NULL, " "));
	if (strncmp(op, "add", 4) == 0) return a + b;
	if (strncmp(op, "sub", 4) == 0) return a - b;
	if (strncmp(op, "mul", 4) == 0) return a * b;
	if (strncmp(op, "div", 4) == 0) return a / b;
	else return INT_MIN;
}
void Q15(){
	char str[MAX_LENGTH];
	printf("문자열을 입력하시오: "); scanf_s(" %[^\n]s", &str, MAX_LENGTH);

	printf("연산의 결과: %d\n", calc(str));
	puts("");
}
void advertise(char* str) {
	for (int i = 0; i < strlen(str); i++) {
		char tmp = str[i];
		str[i] = '\0';
		printf("%c%s", tmp, str + i + 1), printf(" %s\n", str);
		str[i] = tmp;
	}
}
void Q16(){
	char str[MAX_LENGTH];
	printf("광고하고 싶은 텍스트를 입력하시오: "); scanf_s(" %[^\n]s", &str, MAX_LENGTH);
	puts("======================");
	advertise(str);
	puts("");
}
int main() {
	//Q1();
	//Q2();
	//Q3();
	//Q4();
	//Q5();
	//Q6();
	//Q7();
	//Q8();
	//Q9();
	//Q10();
	//Q11();
	//Q12();
	//Q13();
	//Q14();
	//Q15();
	//Q16();

	return 0;
}